class TicTacToe:
    def _init_(self):
        self.board = [[' ' for _ in range(3)] for _ in range(3)]
        self.current_player = 'X'
        self.moves_left = 9

    def print_board(self):
        for row in self.board:
            print('| ' + ' | '.join(row) + ' |')
            print('-------------')

    def make_move(self, row, col):
        if self.board[row][col] == ' ':
            self.board[row][col] = self.current_player
            self.moves_left -= 1
            return True
        else:
            print("Invalid move. Try again.")
            return False

    def check_winner(self):
        # Check rows
        for row in self.board:
            if all([cell == self.current_player for cell in row]):
                return True

        # Check columns
        for col in range(3):
            if all([self.board[row][col] == self.current_player for row in range(3)]):
                return True

        # Check diagonals
        if all([self.board[i][i] == self.current_player for i in range(3)]) or \
           all([self.board[i][2-i] == self.current_player for i in range(3)]):
            return True

        return False

    def play_game(self):
        print("Welcome to Tic Tac Toe!")
        self.print_board()

        while self.moves_left > 0:
            print(f"Player {self.current_player}'s turn.")
            try:
                row, col = map(int, input("Enter your move (row col): ").split())
                if row < 0 or row > 2 or col < 0 or col > 2:
                    raise ValueError
            except ValueError:
                print("Invalid input. Please enter numbers between 0 and 2.")
                continue

            if self.make_move(row, col):
                self.print_board()
                if self.check_winner():
                    print(f"Player {self.current_player} wins! Congratulations!")
                    return
                self.current_player = 'O' if self.current_player == 'X' else 'X'
        
        print("It's a draw! Game over.")

if _name_ == "_main_":
    game = TicTacToe()
    game.play_game()
